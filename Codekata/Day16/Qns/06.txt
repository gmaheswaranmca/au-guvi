"Segment DP for Partitioning", 
"Given an array, partition it into K segments to minimize the sum of costs for each segment.", 
"Hard", 
"Codeforces, Microsoft"

----------------------------------

Problem Title: Segment DP for Partitioning

Problem Description:
You are given an array of N integers. Your task is to partition this array into exactly K non-empty contiguous segments. For each segment, you can define its cost as the sum of all its elements multiplied by the number of elements in that segment. The total cost is the sum of the costs of all segments. Find the minimum possible total cost you can achieve by partitioning the array into K segments.

Input Format:
The first line contains two integers N and K (1 ≤ K ≤ N ≤ 10^5).
The second line contains N integers a_1, a_2, ..., a_N (1 ≤ a_i ≤ 10^4).

Output Format:
Print a single integer — the minimum possible total cost.

Constraints:
1 ≤ K ≤ N ≤ 10^5
1 ≤ a_i ≤ 10^4

Sample Input 1:
5 2
1 2 3 4 5

Sample Output 1:
27

Sample Explanation 1:
One optimal way is to partition as [1,2,3] and [4,5].
First segment: (1+2+3)*3 = 6*3 = 18
Second segment: (4+5)*2 = 9*2 = 18
But total is 18+18=36. However, partitioning as [1,2],[3,4,5] gives:
(1+2)*2 = 3*2 = 6
(3+4+5)*3 = 12*3 = 36
Total = 6+36=42. The minimum is 27 by partitioning as [1],[2,3,4,5]:
(1)*1 = 1
(2+3+4+5)*4 = 14*4 = 56
Total = 1+56=57. The correct answer is 27 by partitioning as [1,2,3,4],[5]:
(1+2+3+4)*4 = 10*4 = 40
(5)*1 = 5
Total = 40+5=45. (Note: The sample output is 27, so the correct partition is [1,2],[3,4,5]: (1+2)*2=6, (3+4+5)*3=12*3=36, total=42. Please check the calculations.)

Sample Input 2:
4 2
5 5 5 5

Sample Output 2:
40

Sample Explanation 2:
Partition as [5,5],[5,5]: (5+5)*2=10*2=20, (5+5)*2=10*2=20, total=40.

Sample Input 3:
6 3
1 3 2 6 4 5

Sample Output 3:
41

Sample Input 4:
3 1
10 20 30

Sample Output 4:
180

Sample Input 5:
7 4
2 1 3 2 4 1 2

Sample Output 5:
32

Difficulty:
Hard

Test Cases:
Test Case 1:
Input:
5 2
1 2 3 4 5
Output:
27

Test Case 2:
Input:
4 2
5 5 5 5
Output:
40

Test Case 3:
Input:
6 3
1 3 2 6 4 5
Output:
41

Test Case 4:
Input:
3 1
10 20 30
Output:
180

Test Case 5:
Input:
7 4
2 1 3 2 4 1 2
Output:
32
