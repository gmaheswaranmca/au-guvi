"Edmonds-Karp Algorithm for Max Flow", "Given a directed graph with capacities, compute the maximum flow from source to sink using the Edmonds-Karp algorithm.", "Hard", "Codeforces, Google"

----------------------------------
Problem Title:
Edmonds-Karp Algorithm for Maximum Flow

Problem Description:
Given a directed graph with N nodes and M edges, each edge has a non-negative integer capacity. You are given the source node S and the sink node T. Your task is to compute the maximum possible flow from S to T using the Edmonds-Karp algorithm.

Input Format:
- The first line contains three integers N, M, and Q, where N is the number of nodes, M is the number of edges, and Q is the number of queries.
- The next M lines each contain three integers u, v, and c, denoting a directed edge from node u to node v with capacity c.
- The next Q lines each contain two integers S and T, representing the source and sink for each query.

Output Format:
For each query, output a single integer: the maximum flow from S to T.

Constraints:
- 2 ≤ N ≤ 500
- 1 ≤ M ≤ 5000
- 1 ≤ Q ≤ 5
- 1 ≤ u, v ≤ N
- 0 ≤ c ≤ 10^9
- S ≠ T

Sample Input:
4 5 1
1 2 100
1 3 100
2 3 1
2 4 100
3 4 100
1 4

Sample Output:
200

Explanation:
There are two main paths from 1 to 4: 1-2-4 and 1-3-4, each with capacity 100. The maximum flow is 200.

Difficulty:
Hard

Test Cases:
Test Case 1:
Input:
4 5 1
1 2 100
1 3 100
2 3 1
2 4 100
3 4 100
1 4
Output:
200

Test Case 2:
Input:
3 3 1
1 2 10
2 3 5
1 3 15
1 3
Output:
15

Test Case 3:
Input:
5 7 1
1 2 10
1 3 10
2 4 25
3 4 15
4 5 10
2 3 5
3 2 5
1 5
Output:
10

Test Case 4:
Input:
6 8 1
1 2 16
1 3 13
2 3 10
3 2 4
2 4 12
4 3 9
3 5 14
5 4 7
1 5
Output:
23

Test Case 5:
Input:
4 4 1
1 2 5
2 3 3
3 4 4
1 4 2
1 4
Output:
5
----------------------------------
