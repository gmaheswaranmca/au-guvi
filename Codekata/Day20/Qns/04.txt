"Reverse Delete Algorithm for MST using Krukal algorithm", "Given a connected, undirected, weighted graph, implement the Reverse Delete algorithm to find the minimum spanning tree and output its total weight.", "Hard", "GeeksforGeeks, Microsoft"

----------------------------------
Problem Title:
Reverse Delete Algorithm for Minimum Spanning Tree

Problem Description:
Given a connected, undirected, weighted graph with N vertices and M edges, implement the Reverse Delete algorithm to find the Minimum Spanning Tree (MST) of the graph. The Reverse Delete algorithm works by iteratively removing the highest-weight edge from the graph, provided its removal does not disconnect the graph. After processing all edges, output the total weight of the MST.

Input Format:
- The first line contains two integers N and M, the number of vertices and edges in the graph.
- The next M lines each contain three integers u, v, and w, representing an edge between vertices u and v with weight w.

Output Format:
- Output a single integer: the total weight of the Minimum Spanning Tree.

Constraints:
- 2 ≤ N ≤ 10^3
- N-1 ≤ M ≤ N*(N-1)/2
- 1 ≤ u, v ≤ N
- 1 ≤ w ≤ 10^6
- The graph is connected and undirected.
- There are no self-loops or multiple edges between the same pair of vertices.

Sample Input:
4 5
1 2 3
2 3 2
3 4 4
4 1 1
1 3 5

Sample Output:
6

Explanation:
The MST includes edges (4,1), (2,3), and (1,2) with weights 1, 2, and 3 respectively. Total weight = 1 + 2 + 3 = 6.

Difficulty:
Hard

Test Cases:
Test Case 1:
Input:
3 3
1 2 1
2 3 2
1 3 3
Output:
3

Test Case 2:
Input:
5 7
1 2 2
1 3 3
1 4 1
2 4 2
2 5 4
3 4 5
4 5 7
Output:
10

Test Case 3:
Input:
6 8
1 2 4
1 3 3
2 3 2
2 4 5
3 5 6
4 5 1
4 6 7
5 6 8
Output:
17

Test Case 4:
Input:
4 6
1 2 2
1 3 2
1 4 3
2 3 4
2 4 3
3 4 5
Output:
7

Test Case 5:
Input:
2 1
1 2 10
Output:
10
----------------------------------
