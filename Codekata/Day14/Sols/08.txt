import java.util.*;

public class ValidSudoku {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        char[][] board = new char[9][9];
        for (int i = 0; i < 9; i++) {
            String[] row = sc.nextLine().split(" ");
            for (int j = 0; j < 9; j++) {
                board[i][j] = row[j].charAt(0);
            }
        }
        System.out.println(isValidSudoku(board));
    }

    public static String isValidSudoku(char[][] board) {
        // Check rows and columns
        for (int i = 0; i < 9; i++) {
            Set<Character> rowSet = new HashSet<>();
            Set<Character> colSet = new HashSet<>();
            for (int j = 0; j < 9; j++) {
                // Check row
                if (board[i][j] != '.') {
                    if (rowSet.contains(board[i][j])) return "false";
                    rowSet.add(board[i][j]);
                }
                // Check column
                if (board[j][i] != '.') {
                    if (colSet.contains(board[j][i])) return "false";
                    colSet.add(board[j][i]);
                }
            }
        }
        // Check 3x3 sub-boxes
        for (int boxRow = 0; boxRow < 3; boxRow++) {
            for (int boxCol = 0; boxCol < 3; boxCol++) {
                Set<Character> boxSet = new HashSet<>();
                for (int i = 0; i < 3; i++) {
                    for (int j = 0; j < 3; j++) {
                        char c = board[boxRow * 3 + i][boxCol * 3 + j];
                        if (c != '.') {
                            if (boxSet.contains(c)) return "false";
                            boxSet.add(c);
                        }
                    }
                }
            }
        }
        return "true";
    }
}