"Check Balanced Binary Tree", 
"Determine if a binary tree is height-balanced.", 
"Medium", 
"LeetCode, Google"

----------------------------------

Problem Title:
Check Balanced Binary Tree

Problem Description:
Given the root of a binary tree, determine if it is height-balanced. A binary tree is height-balanced if, for every node in the tree, the difference in height between its left and right subtrees is at most 1.

Input Format:
- The first line contains an integer N, the number of nodes in the binary tree.
- The next N lines each contain three values: node value, left child value, and right child value. If a child does not exist, use -1.

Output Format:
- Print "True" if the binary tree is height-balanced, otherwise print "False".

Constraints:
- 1 ≤ N ≤ 10^4
- Node values are integers in the range [-10^5, 10^5]
- The tree is guaranteed to have unique node values.

Sample Input:
5
1 2 3
2 4 -1
3 -1 5
4 -1 -1
5 -1 -1

Sample Output:
True

Explanation:
The tree is:
    1
     / \
    2   3
   /     \
  4       5
For every node, the height difference between left and right subtrees is at most 1.

Difficulty:
Medium

Five Test Cases:
Test Case 1:
Input:
3
1 2 3
2 -1 -1
3 -1 -1
Output:
True

Test Case 2:
Input:
4
1 2 -1
2 3 -1
3 4 -1
4 -1 -1
Output:
False

Test Case 3:
Input:
1
10 -1 -1
Output:
True

Test Case 4:
Input:
7
1 2 3
2 4 5
3 6 7
4 -1 -1
5 -1 -1
6 -1 -1
7 -1 -1
Output:
True

Test Case 5:
Input:
6
1 2 3
2 4 -1
3 5 6
4 -1 -1
5 -1 -1
6 -1 -1
Output:
True
