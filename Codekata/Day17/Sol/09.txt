import java.util.*;

public class TaskScheduling {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int M = sc.nextInt();
        List<List<Integer>> adj = new ArrayList<>();
        int[] indegree = new int[N];
        for (int i = 0; i < N; i++) adj.add(new ArrayList<>());
        for (int i = 0; i < M; i++) {
            int u = sc.nextInt();
            int v = sc.nextInt();
            adj.get(u).add(v);
            indegree[v]++;
        }
        Queue<Integer> q = new ArrayDeque<>();
        for (int i = 0; i < N; i++) {
            if (indegree[i] == 0) q.add(i);
        }
        List<Integer> order = new ArrayList<>();
        while (!q.isEmpty()) {
            int curr = q.poll();
            order.add(curr);
            for (int next : adj.get(curr)) {
                indegree[next]--;
                if (indegree[next] == 0) q.add(next);
            }
        }
        if (order.size() == N) {
            for (int i = 0; i < N; i++) {
                System.out.print(order.get(i));
                if (i != N - 1) System.out.print(" ");
            }
            System.out.println();
        } else {
            System.out.println("Impossible");
        }
    }
}