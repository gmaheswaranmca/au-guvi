Prompt 
    Base Question - "Critical Path in Project Scheduling", "Given a set of tasks with durations and dependencies, find the critical path using topological sorting.", "Medium", "Coursera, Microsoft"
    Give me full coding question for the above base question in the below format:
    Problem title, Proble Description, Input format, Output format,
    Constraints, Sample Input / Ouput / Explanation,
    Difficulty, 
    Five Test Cases 
----------------------------------
Problem Title: Critical Path in Project Scheduling

Problem Description:
You are given a set of tasks required to complete a project. Each task has a specific duration and may depend on the completion of other tasks. Your goal is to determine the critical path of the project, which is the longest path through the task dependency graph and determines the minimum time required to complete the project. Use topological sorting to help identify the critical path.

Input Format:
- The first line contains two integers N and M, where N is the number of tasks (numbered 1 to N), and M is the number of dependencies.
- The second line contains N integers, where the i-th integer represents the duration of task i.
- The next M lines each contain two integers u and v, indicating that task u must be completed before task v can start.

Output Format:
- Print a single integer representing the total duration of the critical path.
- Print the sequence of tasks (space-separated) that form the critical path.

Constraints:
- 1 ≤ N ≤ 10^4
- 0 ≤ M ≤ 2×10^4
- 1 ≤ duration of each task ≤ 10^4
- 1 ≤ u, v ≤ N, u ≠ v

Sample Input:
5 5
2 4 3 1 2
1 2
1 3
3 4
2 4
4 5

Sample Output:
9
1 2 4 5

Explanation:
The critical path is 1 → 2 → 4 → 5 with durations 2 + 4 + 1 + 2 = 9.

Difficulty:
Medium

Test Cases:
1.
Input:
3 2
5 2 3
1 2
2 3
Output:
10
1 2 3

2.
Input:
4 2
2 2 2 2
1 3
2 4
Output:
4
1 3

3.
Input:
6 6
1 2 3 4 5 6
1 2
1 3
2 4
3 4
4 5
5 6
Output:
21
1 2 4 5 6

4.
Input:
2 0
7 8
Output:
8
2

5.
Input:
7 7
2 3 1 4 6 5 2
1 2
1 3
2 4
3 5
4 6
5 6
6 7
Output:
20
1 2 4 6 7
