"Quick Sort on Strings", 
"Sort an array of strings using the quick sort algorithm.", 
"Medium", 
"Amazon, Facebook"

----------------------------------
Problem Title:
Quick Sort on Strings

Problem Description:
Given an array of strings, sort the array in lexicographical (dictionary) order using the quick sort algorithm. You are required to implement the quick sort algorithm explicitly and not use any built-in sorting functions.

Input Format:
- The first line contains an integer N, the number of strings in the array.
- The next N lines each contain a string.

Output Format:
- Output N lines, each containing a string from the sorted array in lexicographical order.

Constraints:
- 1 ≤ N ≤ 10^4
- 1 ≤ Length of each string ≤ 100
- All strings consist of lowercase English letters only.

Sample Input:
5
banana
apple
grape
cherry
date

Sample Output:
apple
banana
cherry
date
grape

Explanation:
The input array of strings is sorted in lexicographical order using the quick sort algorithm.

Difficulty:
Medium

Test Cases:
Test Case 1:
Input:
3
dog
cat
bat
Output:
bat
cat
dog

Test Case 2:
Input:
4
zebra
yak
xenon
wolf
Output:
wolf
xenon
yak
zebra

Test Case 3:
Input:
1
apple
Output:
apple

Test Case 4:
Input:
6
orange
apple
banana
kiwi
grape
melon
Output:
apple
banana
grape
kiwi
melon
orange

Test Case 5:
Input:
2
alpha
beta
Output:
alpha
beta

----------------------------------
import java.util.Scanner;

public class QuickSortStrings {
    public static void quickSort(String[] arr, int low, int high) {
        if (low < high) {
            int pi = partition(arr, low, high);
            quickSort(arr, low, pi - 1);
            quickSort(arr, pi + 1, high);
        }
    }

    private static int partition(String[] arr, int low, int high) {
        String pivot = arr[high];
        int i = low - 1;
        for (int j = low; j < high; j++) {
            if (arr[j].compareTo(pivot) <= 0) {
                i++;
                String temp = arr[i];
                arr[i] = arr[j];
                arr[j] = temp;
            }
        }
        String temp = arr[i + 1];
        arr[i + 1] = arr[high];
        arr[high] = temp;
        return i + 1;
    }

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = Integer.parseInt(sc.nextLine());
        String[] arr = new String[n];
        for (int i = 0; i < n; i++) {
            arr[i] = sc.nextLine();
        }
        quickSort(arr, 0, n - 1);
        for (String s : arr) {
            System.out.println(s);
        }
    }
}