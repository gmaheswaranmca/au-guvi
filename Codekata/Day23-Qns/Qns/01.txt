"Minimum Path Cover in DAG", 
"Given a directed acyclic graph, find the minimum number of vertex-disjoint paths needed to cover all vertices.", 
"Hard", 
"LeetCode, Facebook"

----------------------------------

Problem Title:
Minimum Path Cover in a Directed Acyclic Graph (DAG)

Problem Description:
Given a directed acyclic graph (DAG) with N vertices and M edges, find the minimum number of vertex-disjoint paths required to cover all the vertices of the graph. A path cover is a set of vertex-disjoint paths such that every vertex of the graph belongs to exactly one path.

Input Format:
- The first line contains two integers N and M, the number of vertices and edges in the DAG.
- The next M lines each contain two integers u and v, denoting a directed edge from vertex u to vertex v.

Output Format:
- Output a single integer, the minimum number of vertex-disjoint paths needed to cover all vertices.

Constraints:
- 1 ≤ N ≤ 500
- 0 ≤ M ≤ N*(N-1)/2
- 1 ≤ u, v ≤ N
- The given graph is a DAG (no cycles).

Sample Input 1:
4 4
1 2
2 3
3 4
1 3

Sample Output 1:
1

Explanation 1:
All vertices can be covered in a single path: 1 → 2 → 3 → 4.

Sample Input 2:
3 0

Sample Output 2:
3

Explanation 2:
There are no edges, so each vertex forms its own path.

Sample Input 3:
5 4
1 2
2 3
4 5
3 4

Sample Output 3:
1

Explanation 3:
One possible path covering all vertices: 1 → 2 → 3 → 4 → 5.

Sample Input 4:
6 3
1 2
3 4
5 6

Sample Output 4:
3

Explanation 4:
Three paths: 1→2, 3→4, 5→6.

Sample Input 5:
7 6
1 2
2 3
3 4
4 5
5 6
6 7

Sample Output 5:
1

Explanation 5:
All vertices can be covered in a single path: 1→2→3→4→5→6→7.

Difficulty:
Hard

Five Test Cases:
Test Case 1:
Input:
4 4
1 2
2 3
3 4
1 3
Output:
1

Test Case 2:
Input:
3 0
Output:
3

Test Case 3:
Input:
5 4
1 2
2 3
4 5
3 4
Output:
1

Test Case 4:
Input:
6 3
1 2
3 4
5 6
Output:
3

Test Case 5:
Input:
7 6
1 2
2 3
3 4
4 5
5 6
6 7
Output:
1

----------------------------------

