"Range Parity Query", 
"Determine if the number of odd elements in a range is even or odd, with updates.", 
"Medium", 
"HackerRank, Microsoft"

----------------------------------

Problem Title:
Range Parity Query

Problem Description:
You are given an array of N integers. You need to answer Q queries of two types:
1. Update the value at a given index to a new value.
2. For a given range [L, R], determine if the number of odd elements in that range is even or odd. Output "Even" if the count is even, otherwise output "Odd".

Input Format:
- The first line contains two integers N and Q, the size of the array and the number of queries.
- The second line contains N integers, the initial elements of the array.
- The next Q lines each describe a query:
    - For an update query: "1 X Y" (set the value at index X to Y, 1-based indexing)
    - For a parity query: "2 L R" (query the parity of the number of odd elements in the range [L, R], inclusive)

Output Format:
For each parity query, output "Even" or "Odd" on a new line.

Constraints:
- 1 ≤ N, Q ≤ 10^5
- 1 ≤ Array elements, Y ≤ 10^9
- 1 ≤ X, L, R ≤ N
- L ≤ R

Sample Input:
5 5
1 2 3 4 5
2 1 5
1 3 6
2 2 4
1 5 7
2 1 5

Sample Output:
Odd
Even
Odd

Explanation:
- Query 1: Range [1,5] has 1,2,3,4,5 → odds: 1,3,5 (3 odds, which is odd)
- Query 2: Update index 3 to 6 → array becomes 1,2,6,4,5
- Query 3: Range [2,4] has 2,6,4 → odds: none (0 odds, which is even)
- Query 4: Update index 5 to 7 → array becomes 1,2,6,4,7
- Query 5: Range [1,5] has 1,2,6,4,7 → odds: 1,7 (2 odds, which is even)

Difficulty:
Medium

Five Test Cases:
Test Case 1:
Input:
3 3
2 4 6
2 1 3
1 2 5
2 1 3
Output:
Even
Odd

Test Case 2:
Input:
4 4
1 3 5 7
2 1 4
1 4 2
2 2 4
2 1 2
Output:
Even
Odd
Even

Test Case 3:
Input:
6 2
2 4 6 8 10 12
2 1 6
2 3 5
Output:
Even
Even

Test Case 4:
Input:
5 3
1 2 3 4 5
2 2 4
1 1 8
2 1 5
Output:
Even
Even

Test Case 5:
Input:
7 4
1 2 3 4 5 6 7
2 1 7
1 7 8
2 1 7
2 4 6
Output:
Odd
Even
Even

----------------------------------
