import java.util.*;

public class DistinctSubstringsZAlgo {
    // Efficient approach using Z Algorithm and Trie
    static class TrieNode {
        TrieNode[] next = new TrieNode[26];
    }

    public static int countDistinctSubstringsEfficient(String s) {
        int n = s.length();
        TrieNode root = new TrieNode();
        int count = 0;
        for (int i = 0; i < n; i++) {
            TrieNode node = root;
            for (int j = i; j < n; j++) {
                int idx = s.charAt(j) - 'a';
                if (node.next[idx] == null) {
                    node.next[idx] = new TrieNode();
                    count++;
                }
                node = node.next[idx];
            }
        }
        return count;
    }

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int T = Integer.parseInt(sc.nextLine());
        for (int t = 0; t < T; t++) {
            String s = sc.nextLine().trim();
            System.out.println(countDistinctSubstringsEfficient(s));
        }
    }
}