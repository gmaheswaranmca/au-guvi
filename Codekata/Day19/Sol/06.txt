import java.util.*;
import java.io.*;

public class Main {
    static class FenwickTree {
        long[] tree;
        int n;

        FenwickTree(int size) {
            n = size;
            tree = new long[n + 2];
        }

        void add(int idx, long delta) {
            idx++; // 1-based indexing
            while (idx <= n) {
                tree[idx] += delta;
                idx += idx & -idx;
            }
        }

        long prefixSum(int idx) {
            idx++; // 1-based indexing
            long res = 0;
            while (idx > 0) {
                res += tree[idx];
                idx -= idx & -idx;
            }
            return res;
        }

        long rangeSum(int l, int r) {
            return prefixSum(r) - prefixSum(l - 1);
        }
    }

    public static void main(String[] args) throws IOException {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        StringTokenizer st = new StringTokenizer(br.readLine());
        int n = Integer.parseInt(st.nextToken());
        int q = Integer.parseInt(st.nextToken());
        long[] arr = new long[n];
        st = new StringTokenizer(br.readLine());
        for (int i = 0; i < n; i++) {
            arr[i] = Long.parseLong(st.nextToken());
        }
        FenwickTree ft = new FenwickTree(n);
        for (int i = 0; i < n; i++) {
            ft.add(i, arr[i]);
        }
        StringBuilder sb = new StringBuilder();
        for (int i = 0; i < q; i++) {
            st = new StringTokenizer(br.readLine());
            int type = Integer.parseInt(st.nextToken());
            if (type == 1) {
                int x = Integer.parseInt(st.nextToken());
                long y = Long.parseLong(st.nextToken());
                long delta = y - arr[x];
                arr[x] = y;
                ft.add(x, delta);
            } else if (type == 2) {
                int l = Integer.parseInt(st.nextToken());
                int r = Integer.parseInt(st.nextToken());
                sb.append(ft.rangeSum(l, r)).append('\n');
            }
        }
        System.out.print(sb);
    }
}