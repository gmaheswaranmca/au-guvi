"Counting Inversions in Array using Fenwick Tree", 
"Count the number of inversions in an array using a Fenwick Tree.", 
"Medium", 
"LeetCode, Microsoft"

----------------------------------
Problem Title:
Counting Inversions in Array using Fenwick Tree

Problem Description:
Given an array of integers, count the number of inversions in the array. An inversion is a pair of indices (i, j) such that i < j and arr[i] > arr[j]. Use a Fenwick Tree (Binary Indexed Tree) to efficiently compute the number of inversions.

Input Format:
- The first line contains an integer n, the number of elements in the array.
- The second line contains n space-separated integers, representing the elements of the array.

Output Format:
- Print a single integer, the number of inversions in the array.

Constraints:
- 1 <= n <= 10^5
- -10^9 <= arr[i] <= 10^9

Sample Input 1:
5
2 4 1 3 5

Sample Output 1:
3

Explanation 1:
The inversions are: (2,1), (4,1), (4,3).

Sample Input 2:
4
1 2 3 4

Sample Output 2:
0

Explanation 2:
The array is already sorted, so there are no inversions.

Sample Input 3:
6
6 5 4 3 2 1

Sample Output 3:
15

Explanation 3:
Every pair is an inversion.

Difficulty:
Medium

Test Cases:
Test Case 1:
Input:
5
2 4 1 3 5
Output:
3

Test Case 2:
Input:
4
1 2 3 4
Output:
0

Test Case 3:
Input:
6
6 5 4 3 2 1
Output:
15

Test Case 4:
Input:
7
1 3 2 3 1 2 1
Output:
10

Test Case 5:
Input:
8
8 7 6 5 4 3 2 1
Output:
28
----------------------------------
